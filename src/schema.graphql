scalar Date

type User @key(fields: "id") {
  id: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  role: String!
  created: Date!
  updated: Date!
}

type LoginResponse {
  user: User!
  token: String!
}

extend type Query {
  users: [User]!
  user(id: String!): User
  login(loginCredentials: LoginInput): LoginResponse
}

type Mutation {
  registerUser(createUserInput: CreateUserInput): User
  updateUser(updateUserInput: UpdateUserInput): Boolean
  deleteUser(id: String): Boolean
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input UpdateUserInput {
  id: String!
  firstName: String!
  lastName: String!
}

input LoginInput {
  email: String!
  password: String!
}
